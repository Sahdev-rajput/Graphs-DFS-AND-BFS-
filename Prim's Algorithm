#include <iostream>
#include <queue>
using namespace std;
void BFX(int G[][9], int start, int n)
{
	queue<int> q;
	int visited[9] = { 0 };
	cout << start << " ";
	visited[start] = 1;
	q.push(start);
	while (!q.empty())
	{
		start = q.front();
		q.pop();
		for (int j = 0; j < 9; j++)
		{
			if (G[start][j] == 1 && visited[j] == 0)
			{
				cout << j << " ";
				q.push(j);
				visited[j] = 1;
			}
		}

	}
}
void DFX(int G[][9], int i, int n)
{
	static int visited[9] = { 0 };
	if (visited[i] == 0)
	{
		visited[i] = 1;
		cout << i << " ";
		for (int j = 0; j < 9; j++)
		{
			if (G[i][j] == 1 && visited[j] == 0)
			{
				DFX(G, j, n);
			}
		}
	}
}
int main()
{
	int G[9][9] = { {0,0,0,0,0,0,0,0,0},
				 {0,0,1,0,1,0,0,0,0},
				 {0,1,0,0,0,0,0,0,1},
		{0,0,0,0,1,1,0,0,1 },
		{0,1,0,1,0,1,0,0,0},
		{0,0,0,1,1,0,1,1,0},
		{0,0,0,0,0,1,0,0,0},
		{0,0,0,0,0,1,0,0,0},
		{0,0,1,1,0,0,0,0,0} };
	//BFX(G, 1, 8);
	//DFX(G, 3, 9);
	BFX(G, 3, 9);
}
